.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH TERMIT 30 "NOV 2008" Linux "User Manuals"
.SH NAME
termit \- lightweight terminal emulator

.SH SYNOPSIS
.B termit [-option ...]

.SH DESCRIPTION
.B termit
is a vte-based lightweight terminal emulator. All configuration
is done via Lua-scripts. The only other dependencies are 
Gtk+ and Vte.

.SH OPTIONS
.BR -h
or
.BR --help
.RS
Print help
.RE
.BR -v
or
.BR --version
.RS
Print version number
.RE
.BR -e
or
.BR --execute
.I cmd
.RS
Use
.I cmd
as shell
.P
termit --execute=zsh
.P
.RE
.BR -i
or
.BR --init
.I file
.RS
Use
.I file
instead of default rc.lua
.P
termit --init=session.lua
.P
.RE
.SH FILES
.I $HOME/.config/termit/rc.lua
.RS
Per user configuration file. See section
.BR "TERMIT LUA API"
for further details.
.RE
.I /usr/share/doc/termit/rc.lua.example
.RS
Example rc.lua file. Demonstrates usage of almost all available settings.
.SH "TERMIT LUA API"
.B "Functions:"

.B activateTab
(
.I tab_index
) - Activates tab by index.
    tab_index - index of tab to activate. Index of the first tab is 1.
.P
.B addMenu
(
.I menu
) - Adds menu in menubar.
    menu - table of TermitMenuItem type.
.P
.B addPopupMenu
(
.I menu
)
Adds menu in popup menu, similar to addMenu.
    menu - table of TermitMenuItem type.
.P
.B bindKey
(
.I keys
,
.I luaFunction
) - Sets new keybinding. If luaFunction is 
.I nil
removes keybinding.
    keys - string with keybinding
    luaFunction - callback function
.P
.B bindMouse
(
.I event
,
.I luaFunction
) - Sets new mouse-binding. If luaFunction is 
.I nil
removes mouse-binding.
    event - string with one of those values: DoubleClick
    luaFunction - callback function
.P
.B closeTab
() - Closes active tab.
.P
.B copy
() - Copies selection into tab's buffer.
.P
.B currentTab
() - Returns current tab of TermitTabInfo.
.P
.B currentTabIndex
() - Returns current tab index.
.P
.B loadSessionDlg
() - Displays "Load session" dialog.
.P
.B nextTab
() - Activates next tab.
.P
.B openTab
(
.I tabInfo
) - Opens new tab.
    tabinfo - table of TermitTabInfo with tab settings.
.P
.B paste
() - Pastes tab's buffer.
.P
.B preferencesDlg
() - Displays "Preferences" dialog.
.P
.B prevTab
() - Activates previous tab.
.P
.B quit
() - Quit.
.P
.B reconfigure
() - Sets all configurable variables to defaults and forces rereading rc.lua.
.P
.B saveSessionDlg
() - Displays "Save session" dialog.
.P
.B selection
() - Returns selected text from current tab.
.P
.B setEncoding
(
.I encoding
) - Changes encoding for active tab.
    encoding - string with encoding name.
.P
.B setKbPolicy
(
.I kb_policy
) - Sets keyuboard policy for shortcuts.
    kb_policy - string with one of those values:
        keycode - use hardware keyboard codes (XkbLayout-independent)
        keysym - use keysym values (XkbLayout-dependent)
.P
.B setOptions
(
.I opts
) - Changes default options.
    opts - TermitOptions table with new options.
.P
.B setTabBackgroundColor
(
.I color
) - Changes background color for active tab.
    color - string with new color.
.P
.B setTabFont
(
.I font
) - Changes font for active tab.
    font - string with new font.
.P
.B setTabForegroundColor
(
.I color
) - Changes foreground (e.g. font) color for active tab.
    color - string with new color.
.P
.B setTabTitle
(
.I tabTitle
) - Changes title for active tab.
    tabTitle - string with new tab title.
.P
.B setTabTitleDlg
() - Displays "Set tab title" dialog.
.P
.B setWindowTitle
(
.I title
) - Changes termit window title.
    title - string with new title.
.P
.B spawn
(
.I command
) - Spawns command (works via shell).
    command - string with command and arguments.
.P
.B toggleMenubar
() - Displays or hides menubar.
.P
.B "Types:"

.B TermitKeybindings
- table with predefined keybindings.
    prevTab - 'Alt-Left'
    nextTab - 'Alt-Right'
    openTab - 'Ctrl-t'
    closeTab - 'Ctrl-w'
    copy - 'Ctrl-Insert'
    paste - 'Shift-Insert'
.P
.B TermitMatch
- table for matches.
    field name - match regular expression
    field value - lua callback for action on Left-click.
.P
.B TermitMenuItem
- table for menuitems.
    name - name for menuitem
    action - lua-function to execute when item activated
    accel - accelerator for menuitem. String with keybinding
.P
.B TermitOptions
- table with termit options.
    tabName - default tab name
    encoding - default encoding
    wordChars - word characters (double click selects word)
    font - font name
    foregroundColor
    backgroundColor
    imageFile - path to image to be set on the background
    showScrollbar
    fillTabbar - expand tabs' titles to fill whole tabbar
    allowChangingTitle - auto change title (similar to xterm)
    audibleBell - enables audible bell
    visibleBell - enables visible bell
    urgencyOnBell - set WM-hint 'urgent' on termit window when bell
    getWindowTitle - lua function to generate new window title
    getTabTitle - lua function to generate new tab title
    transparency - use transparency level [0,1]
    hideSingleTab
    hideMenubar
    scrollbackLines
    geometry - cols x rows to start with
    colormap - array with 8 or 16 or 24 colors
    matches - table with items of TermitMatch type
    tabs - table with items of TermitTabInfo type
.P
.B TermitTabInfo
- table with tab settings:
    title
    command
    encoding
    workingDir
    pid - process id
    font - font string
    fontSize - font size
.P
.B "Globals:"

.B tabs
- table with tab settings, access specific tabs by index.
.RS
.SH EXAMPLES
Look inside provided rc.lua.example.
.SH BUGS
After start sometimes there is black screen. Resizing termit window helps.
.P
In options table 'tabs' field should be the last one. When loading all settings are applied in the same order as they are set in options table. So if you set tabs and only then colormap, these tabs would have default colormap.
.SH AUTHOR
Evgeny Ratnikov <ratnikov.ev at gmail dot com>
.SH "SEE ALSO"
.BR lua (1)
